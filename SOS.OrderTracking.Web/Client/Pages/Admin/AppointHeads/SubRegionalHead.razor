@page "/admin/appointsubregionalhead"
@using SOS.OrderTracking.Web.Client.Services.Admin
@using SOS.OrderTracking.Web.Client.Components
@using Radzen.Blazor
@inherits APICrudBaseV2<SubRegionalHeadViewModel, SubRegionalHeadListViewModel, int, AppointHeadsAdditionalValueViewModel, SubRegionalHeadService>
@attribute [Authorize(Roles = "SOS-Admin")]

<SubHeader Heading="SubRegional Heads" RowsCount="@TotalRows" SearchString="SearchString">
    <a @onclick="()=> OnItemClicked(0)" class="btn btn-light-warning font-weight-bold ml-2">
        SubRegional Heads
    </a>
</SubHeader>

<FluentCard IsBusy="@IsTableBusy">
    <Notification Content="@Error" Type="NotificationCssClass.Danger"></Notification>
    <table class="items-table">
        <thead>
            <tr>
                <td>Emp Code</td>
                <td>Name</td>
                <td>Designation</td>
                <td>SubRegion Name</td>
                <td>Start Date</td>
                <td>End Date</td>
            </tr>
        </thead>
        <tbody>
            @if (Items != null)
            {
                @foreach (var member in Items.OrderByDescending(x => x.IsActive).ThenBy(x => x.StartDate))
                {
                    <tr>
                        <td>
                            <small class="btn btn-xs btn-pill" style="color:@(member.IsActive?"#3493cf": "#eb1b1b");border-color:@(member.IsActive?"#3493cf": "#eb1b1b");">
                                @member.Code
                            </small>
                        </td>
                        <td>
                            @member.Name
                        </td>
                        <td>
                            Sub Regional Head
                        </td>
                        <td>
                            @member.SubRegionName
                        </td>
                        <td>
                            @member.StartDate.ToString("dd-MM-yyyy")
                        </td>
                        <td>
                            @member.EndDate?.ToString("dd-MM-yyyy")
                        </td>
                        <td style="padding:2px; text-align:right">
                            <a class="btn btn-icon btn-light-danger btn-sm mr-2" style="cursor:pointer;" @onclick="() => OnItemClicked(member.Id)">
                                <i class="flaticon2-pen"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <EditForm Model="BaseIndexModel.CurrentIndex">
        <PaginationStrip @bind-Value="BaseIndexModel.CurrentIndex" TotalPages="TotalPages" TotalRows="TotalRows"></PaginationStrip>
    </EditForm>
</FluentCard>

<InputForm SelectedItem="SelectedItem"
           IsBusy="IsModalBusy"
           Heading="SubRegional Head Form"
           OnCancel="() => { SelectedItem = null; ValidationError = null;}"
           Error="@ValidationError"
           OnValidSubmit="ShowConformation">
    <ValidationSummary></ValidationSummary>
    @if (SelectedItem.Id == 0)
    {
        <div class="form-group">
            <label>Region</label>
            <RadzenDropDown AllowClear="true" TValue="int" class="form-control"
                            Data="@Regions" Placeholder="Select a Region" AllowFiltering="true"
                            TextProperty="Text" ValueProperty="IntValue" @bind-Value="SelectedItem.RegionId" />
            <ValidationMessage For="() => SelectedItem.RegionId"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>SubRegion</label>
            <RadzenDropDown AllowClear="true" TValue="int" class="form-control"
                            Data="@SubRegions" Placeholder="Select a SubRegion" AllowFiltering="true"
                            TextProperty="Text" ValueProperty="IntValue" @bind-Value="SelectedItem.SubRegionId" />
            <ValidationMessage For="() => SelectedItem.SubRegionId"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>Employee</label>
            <RadzenDropDown AllowClear="true" TValue="int" class="form-control"
                            Data="@Employees" Placeholder="Select an Employee" AllowFiltering="true"
                            TextProperty="Text" ValueProperty="IntValue" @bind-Value="SelectedItem.EmployeeId" />
            <ValidationMessage For="() => SelectedItem.EmployeeId"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>Start Date</label>
            <RadzenDatePicker TValue="DateTime?" @bind-Value="@SelectedItem.StartDate" DateFormat="dd-MM-yyyy" Style="width:100%;box-shadow:none" />
            <ValidationMessage For="() => SelectedItem.StartDate"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>End Date</label>
            <RadzenDatePicker TValue="DateTime?" @bind-Value="@SelectedItem.EndDate" DateFormat="dd-MM-yyyy" Style="width:100%;box-shadow:none" />
            <ValidationMessage For="() => SelectedItem.EndDate"></ValidationMessage>
        </div>
    }
    else
    {
        <div class="form-group">
            <label>Region:</label><br />
            <label class="form-control">@SelectedItem.RegionName</label>
        </div>
        <div class="form-group">
            <label>Sub Region:</label><br />
            <label class="form-control">@SelectedItem.SubRegionName</label>
        </div>
        <div class="form-group">
            <label>Name:</label><br />
            <label class="form-control">@SelectedItem.Name</label>
        </div>
        <div class="form-group">
            <label>Start Date:</label><br />
            <label class="form-control">@SelectedItem.StartDate</label>
        </div>
        @if (SelectedItem.EndDate == null)
        {
            <div class="form-group">
                <label>End Date</label>
                <RadzenDatePicker TValue="DateTime?" @bind-Value="@SelectedItem.EndDate" DateFormat="dd-MM-yyyy" Style="width:100%;box-shadow:none" />
                <ValidationMessage For="() => SelectedItem.EndDate"></ValidationMessage>
            </div>
        }
        else
        {
            <div class="form-group">
                <label>End Date:</label><br />
                <label class="form-control">@SelectedItem.EndDate</label>
            </div>
        }
    }
</InputForm>

<InputForm SelectedItem="RelationshipDetailViewModel"
           IsBusy="IsModalBusy"
           Heading=" Relationship Detail Form"
           OnCancel="() => { RelationshipDetailViewModel = null; ValidationError = null;}"
           Error="@ValidationError"
           OnValidSubmit="async()=> {  RelationshipDetailViewModel = null; await OnFormSubmit(); }">
    <RelationshipDetailComponent Model="RelationshipDetailViewModel"></RelationshipDetailComponent>
</InputForm>