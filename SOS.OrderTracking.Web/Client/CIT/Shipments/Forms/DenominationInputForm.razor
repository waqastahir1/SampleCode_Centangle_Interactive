@using SOS.OrderTracking.Web.Shared.StaticClasses
<div class="form-group">
    <label>Cash Unit</label>
    <InputSelect class="form-control" @bind-Value="CitDenominationViewModel.Type">
        <option value="@DenominationType.Leafs">Leafs</option>
        <option value="@DenominationType.Packets">Packets</option>
        <option value="@DenominationType.Bundles">Bundles</option>
    </InputSelect>
    <ValidationMessage For="() => CitDenominationViewModel.Type"></ValidationMessage>
</div>
<div class="form-group">
    <label>Currency</label>
    <InputSelect class="form-control" @bind-Value="CitDenominationViewModel.CurrencySymbol">
        <option value="@CurrencySymbol.PKR">PKR</option>
        <option value="@CurrencySymbol.USD">USD</option>
        <option value="@CurrencySymbol.EURO">EURO</option>
    </InputSelect>
    <ValidationMessage For="() => CitDenominationViewModel.CurrencySymbol"></ValidationMessage>
</div>

<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency1x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x1</span></div>
        </div>
    </div>
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency2x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x2</span></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency5x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x5</span></div>
        </div>
    </div>
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency10x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x10</span></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency20x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x20</span></div>
        </div>
    </div>
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency50x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x50</span></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency75x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x75</span></div>
        </div>
    </div>
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency100x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x100</span></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency500x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x500</span></div>
        </div>
    </div>

    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency1000x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x1000</span></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="form-group col-6">
        <div class="input-group">
            <input type="number" class="form-control" @bind-value="CitDenominationViewModel.Currency5000x" @bind-value:event="oninput">
            <div class="input-group-append"><span class="input-group-text">x5000</span></div>
        </div>
    </div>
</div>
<hr />


@if (CitDenominationViewModel.CurrencySymbol == CurrencySymbol.PKR)
{
    CitDenominationViewModel.ExchangeRate = 1;
}
else if (CitDenominationViewModel.CurrencySymbol == CurrencySymbol.USD || CitDenominationViewModel.CurrencySymbol == CurrencySymbol.EURO)
{
    <div class="form-group">
        <label>ExchangeRate</label>
        <input type="number" step="any" class="form-control" @bind-value="CitDenominationViewModel.ExchangeRate" @bind-value:event="oninput">
        <ValidationMessage For="() => CitDenominationViewModel.ExchangeRate"></ValidationMessage>
    </div>

}

@{
    TotalAmount = CurrencyHelper.CalculateAmount(CitDenominationViewModel, CitDenominationViewModel.Type).GetValueOrDefault();
    AmountPKR = Convert.ToInt32(TotalAmount.GetValueOrDefault() * CitDenominationViewModel.ExchangeRate);
    AmountInWords = CurrencyHelper.AmountInWords(AmountPKR);
}

<div class="form-group">
    <div class="input-group">
        <label class="form-control font-size-h3 font-weight-bold">AmountPKR</label>
        <label class="form-control font-size-h3 font-weight-bold">@AmountPKR.ToString("N0")</label>
        <ValidationMessage For="() => AmountPKR"></ValidationMessage>
    </div>
</div>

<div class="form-group">
    <div class="input-group">
        <textarea class="form-control font-weight-bolder text-dark font-size-h7" @bind="@AmountInWords"></textarea>
    </div>
</div>

@if (CitDenominationViewModel.FinalizeShipment)
{
    <div class="form-group">
        <div class="input-group">
            <span class="form-control font-weight-bolder text-danger font-size-h7">Please Review all of denominations, You cannot change Amount/Denominations once you hit save.</span>
        </div>
    </div>
}
@code {
    [Parameter]
    public CitDenominationViewModel CitDenominationViewModel { get; set; }

    public int? TotalAmount { get; set; }
    public string AmountInWords { get; set; }
    private int _amountPKR;

    public int AmountPKR
    {
        get { return _amountPKR; }
        set
        {
            if (_amountPKR != value)
                NewAmountPKR.InvokeAsync(new Tuple<int, int>(value, TotalAmount.GetValueOrDefault()));
            _amountPKR = value;

        }
    }

    [Parameter]
    public EventCallback<Tuple<int, int>> NewAmountPKR { get; set; }


}
