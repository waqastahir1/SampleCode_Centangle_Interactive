@page "/admin/branches/vehicles"
@inherits APICrudBaseV2<VehicleToBranchFormViewModel, BranchVehicleListViewModel, int, BranchToVehicleInputViewModel, BranchVehicleService>


@using SOS.OrderTracking.Web.Client.Components
@using SOS.OrderTracking.Web.Client.Services.Admin
@using SOS.OrderTracking.Web.Shared.ViewModels.Branches
@using Radzen.Blazor

<SubHeader Heading='Manage Branch Dedicated Vehicle' RowsCount="@TotalRows" HideSearch="true">
    <a @onclick="()=> OnItemClicked(0)" class="btn btn-light-warning font-weight-bold ml-2">
        Allocate Dedicated Vehicle
    </a>
    <a @onclick="() => PubSub.Hub.Default.Publish<DedicatedVehicles>(null)" class="btn btn-secondary font-weight-bold ml-2">
        <span><i class="fa fa-times"></i></span>
    </a>
</SubHeader>
<FluentCard IsBusy="@IsTableBusy">
    <Notification Content="@Error" Type="NotificationCssClass.Danger"></Notification>
    <div class="row">
        <div class="col-6 text-black bold">
            <h6>Branch Code: @Branch_Code </h6>
            <h6>Branch Name: @Branch_Name </h6>
        </div>
    </div>
    <table class="items-table">
        <thead>
            <tr>
                <th>Vehicle</th>
                <th>Start Date</th>
                <th>End Date</th>
            </tr>
        </thead>
        <tbody>
            @if (Items is not null)
            {
                foreach (var item in Items)
                {
            <tr>
                <td>
                    <small class="btn btn-xs btn-pill" style="color:@(item.IsActive ?"#42b542": "#eb1b1b");border-color:@(item.IsActive ?"#42b542": "#eb1b1b");">@item.Asset</small>
                </td> @* previous color : #3493cf*@
                <td>@item.AllocatedFrom?.ToString("dd-MM-yyyy")</td>
                <td>@item.AllocatedThru?.ToString("dd-MM-yyyy")</td>
                <td style="padding:2px; text-align:right">
                    @*@if (item.AllocatedThru.HasValue)
                    {*@
                        <a class="btn btn-icon btn-light-danger btn-sm mr-2"
                           style="cursor:pointer;" @onclick="async () => await OnRemoveItemClicked(item.AllocationId)">
                            <i class="fas fa-user-minus"></i>
                        </a>
                        @*}
                        else
                        {*@
                        <a class="btn btn-icon btn-light-danger btn-sm mr-2"
                           style="cursor:pointer;" @onclick="() => OnItemClicked(item.AllocationId)">
                            <i class="flaticon2-pen"></i>
                        </a>
                    @*}*@
                </td>
            </tr>
                }
            }
        </tbody>
    </table>
    <EditForm Model="BaseIndexModel.CurrentIndex">
        <PaginationStrip @bind-Value="BaseIndexModel.CurrentIndex" TotalPages="TotalPages" TotalRows="TotalRows"></PaginationStrip>
    </EditForm>
</FluentCard>
<InputForm SelectedItem="SelectedItem"
           IsBusy="IsModalBusy"
           Heading="Vehicle Allocation Form"
           OnCancel="() => { SelectedItem = null; ValidationError = null; }"
           Error="@ValidationError"
           OnValidSubmit="ShowConformation">

    @if (OrganizationalUnit.StationId == null)
    {
        <label class="text-danger">Please select station from top of the page to show vehicles</label>
        <br />
        <br />
    }
    @if (SelectedItem.AssetAllocationId is 0)
    {
        <div class="form-group">
            <label>Vehicles</label>
            <RadzenDropDown AllowClear="true" TValue="int?" class="form-control"
                            Data="@Vehicles" Placeholder="Select an Vehicle" AllowFiltering="true"
                            TextProperty="Text" ValueProperty="IntValue" @bind-Value="SelectedItem.AssetId" />
            <ValidationMessage For="() => SelectedItem.AssetId"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>Start Date</label>
            <RadzenDatePicker TValue="DateTime?" @bind-Value="@SelectedItem.StartDate" DateFormat="dd-MM-yyyy" Style="width:100%;box-shadow:none" />
            <ValidationMessage For="() => SelectedItem.StartDate"></ValidationMessage>
        </div>
    }
    else
    {
        <div class="form-group">
            <label>Vehicle:</label><br />
            <label>@SelectedItem.Vehicle</label>
        </div>
        <div class="form-group">
            <label>Start Date:</label><br />
            <label>@SelectedItem.StartDate.GetValueOrDefault().ToString("dd-MM-yyyy")</label>
        </div>
    }
    @*@if (DedicatedVehicleCapacity > 0)
        {*@
    <div class="form-group">
        <label>End Date</label>
        <RadzenDatePicker TValue="DateTime?" @bind-Value="@SelectedItem.EndDate" DateFormat="dd-MM-yyyy" Style="width:100%;box-shadow:none" />
        <ValidationMessage For="() => SelectedItem.EndDate"></ValidationMessage>
    </div>
    @*}*@
</InputForm>
<InputForm SelectedItem="vehicleRemoveFormViewModel"
           IsBusy="IsModalBusy"
           Heading="Remove dedicated vehicle"
           OnCancel="() => { vehicleRemoveFormViewModel = null; ValidationError = null; }"
           Error="@ValidationError"
           OnValidSubmit="async () => { await RemoveVehicle(); }">
    <label>@vehicleRemoveFormViewModel.Vehicle will remove from this crew do you want to proceed ?</label>
</InputForm>